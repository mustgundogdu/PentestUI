from django.contrib.auth.decorators import login_required
from django.shortcuts import render, get_object_or_404, redirect
from django.template import loader
from django.http import HttpResponse
from django import template
from pentestui.pentest_api.models import ProcessUI
@login_required(login_url="/login/")
def index(request):

    context = {}
    context['segment'] = 'index'
    user = request.user.username
    #html_template = loader.get_template( 'index.html' )
    #return HttpResponse(html_template.render(History, request))
    model_list = list(ProcessUI.objects.all().filter(userinf=user))

    return render(
        request,'index.html',
            {
                'History': model_list
            }

        )

@login_required(login_url="/login/")
def pages(request):
    context = {}
    # Render to pages and check on Pentestui
    try:

        loadTemplate      = request.path.split('/')[-1]
        context['segment'] = loadTemplate

        html_template = loader.get_template( loadTemplate )
        return HttpResponse(html_template.render(context, request))

    except template.TemplateDoesNotExist:

        html_template = loader.get_template( 'page-404.html' )
        return HttpResponse(html_template.render(context, request))

    except:

        html_template = loader.get_template( 'page-500.html' )
        return HttpResponse(html_template.render(context, request))

@login_required(login_url="/login/")
def resultdetail(request, date):
    user = request.user.username

    # Query Just Result to result page
    ResultHistory = list(ProcessUI.objects.all().filter(time=date) & ProcessUI.objects.all().filter(userinf=user))

    return render(
        request,'resultlog.html',
            {
                'User_History': ResultHistory
            }

        )

@login_required(login_url="/login/")
def DeleteQuery(request, date):
    user = request.user.username

    # Query Just Result to result page
    DeleteHistory = ProcessUI.objects.all().filter(time=date) & ProcessUI.objects.all().filter(userinf=user)
    DeleteHistory.delete()

    model_list = list(ProcessUI.objects.all().filter(userinf=user))
    return render(
        request,'index.html',
            {
                'History': model_list
            }

        )
